<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lua on Peter&#39;s Notebook</title>
    <link>https://peterlavalle.github.io/tags/lua/</link>
    <description>Recent content in Lua on Peter&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Sun, 08 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://peterlavalle.github.io/tags/lua/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Peter&#39;s Awesome Lua with the Core functionality we care about</title>
      <link>https://peterlavalle.github.io/post/oth-palua-core/</link>
      <pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://peterlavalle.github.io/post/oth-palua-core/</guid>
      <description>TL:DR ; results
DukTape is a C engine for executing ECMAScript 5.1ish. (&amp;hellip; or JavaScript or whatever we&amp;rsquo;re calling it this week) Notably, it&amp;rsquo;s distributed as a trio of source files to ease integration.
Lua is a C script engine (for the Lua languages) and is not distributed in such a nice way. So I spent a few hours preparing a (Python) script to repack Lua 5.3.3 into a single header.</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://peterlavalle.github.io/post/first-post/</link>
      <pubDate>Tue, 27 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://peterlavalle.github.io/post/first-post/</guid>
      <description>Can I use polymorphic-static-templates to automagically wire meta-functions into a Lua allocator?
Presently I’m using several “make—” functions to “decorate” objects after allocation and enable get/set/run meta-functions. I keep feeling the “smell” that some esoteric template thingies could be used to make these steps declarative (or maybe automatic!)</description>
    </item>
    
  </channel>
</rss>