<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins on Peter&#39;s Notebook</title>
    <link>https://peterlavalle.github.io/tags/jenkins/</link>
    <description>Recent content in Jenkins on Peter&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Tue, 18 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://peterlavalle.github.io/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MultiBranch Mercurial JenkinsFile</title>
      <link>https://peterlavalle.github.io/post/multibranch-mercurial-jenkins/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://peterlavalle.github.io/post/multibranch-mercurial-jenkins/</guid>
      <description>&lt;p&gt;&lt;strong&gt;WARNING;&lt;/strong&gt; this configuration doesn&amp;rsquo;t seem to delete old builds.
Ever, see; &lt;a href=&#34;https://issues.jenkins-ci.org/browse/JENKINS-34738&#34;&gt;https://issues.jenkins-ci.org/browse/JENKINS-34738&lt;/a&gt;.
I&amp;rsquo;ve worked around it by putting the following blurb near the top of my &lt;code&gt;JenkinsFile&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gradlification of FlexDock</title>
      <link>https://peterlavalle.github.io/post/gradlfy-flexdock/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://peterlavalle.github.io/post/gradlfy-flexdock/</guid>
      <description>Some clever clogs made a snazzy tool called SciLab as another not-MatLab.1 Flex Dock is the framework that (I think) they developed for docking frames. It&amp;rsquo;s not in Maven Central so I&amp;rsquo;ve forked it and deployed it to my own repository.
convert the build The actual conversion was embarrassingly easy since the gradle importer stuff really works for this sort of thing. As a matter of personal preference, I re-arranged the build scripts to be a single file but otherwise left them as-is.</description>
    </item>
    
    <item>
      <title>Automated Unity WebGL Deployment</title>
      <link>https://peterlavalle.github.io/post/myspaceships/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://peterlavalle.github.io/post/myspaceships/</guid>
      <description>I have an old Unity project that I haven&amp;rsquo;t looked at in awhile - this one. If memory serves; assembling a WebGL version is slow and boring - so I&amp;rsquo;m making my eager little Jenkins server do it.
Really I&amp;rsquo;m a bit bored with sbt-launch malarkey and I wanted to see if I could get this rolling. Broadly the steps that I followed went like this;
 Install Unity (5.</description>
    </item>
    
    <item>
      <title>Hexo and Jenkins atop Os X</title>
      <link>https://peterlavalle.github.io/post/hexo-os-x/</link>
      <pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://peterlavalle.github.io/post/hexo-os-x/</guid>
      <description>In which I ramble a bit about setting up CI for this very blog.
I have a Jenkins server running on my OsX computer. (&amp;hellip; or &amp;hellip; I&amp;rsquo;m setting one up anyway) I also have (am establishing?) a blog built by Hexo &amp;hellip; because that seems the right way to do this sort of thing. My constraints of &amp;ldquo;MarkDown&amp;rdquo; and &amp;ldquo;no really - let me use MarkDown because I&amp;rsquo;m going to have a lot of code fragments&amp;rdquo; seem alien to most blogging software - &amp;ldquo;Hexo delivers&amp;rdquo; as the kids say.</description>
    </item>
    
  </channel>
</rss>